<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
			xmlns:tns="http://www.openspcoop2.org/core/config/management" 
			xmlns:api="http://www.openspcoop2.org/core/config" 
			attributeFormDefault="unqualified" 
			elementFormDefault="qualified" 
			targetNamespace="http://www.openspcoop2.org/core/config/management">
			
 	<xsd:import schemaLocation="config.xsd" namespace="http://www.openspcoop2.org/core/config"/>

	<!-- FILTRI -->

	<xsd:element name="search-filter-soggetto" type="tns:search-filter-soggetto" />
	<xsd:complexType name="search-filter-soggetto">
		<xsd:sequence>
 			<xsd:element name="tipo" type="xsd:string" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="nome" type="xsd:string" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="identificativo-porta" type="xsd:string" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="descrizione" type="xsd:string" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="router" type="xsd:boolean" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="pd-url-prefix-rewriter" type="xsd:string" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="pa-url-prefix-rewriter" type="xsd:string" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="ora-registrazione-min" type="xsd:dateTime" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="ora-registrazione-max" type="xsd:dateTime" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="orCondition" type="xsd:boolean" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="limit" type="xsd:integer" minOccurs="0" maxOccurs="1" />
 			<xsd:element name="offset" type="xsd:integer" minOccurs="0" maxOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>


	<!-- IN USE -->

	<xsd:complexType name="use-info">
		<xsd:sequence>
			<xsd:element name="inUseCondition" type="tns:in-use-condition" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="used" type="xsd:boolean"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="in-use-condition">
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" minOccurs="0"/>
			<xsd:element name="type" type="tns:identified" minOccurs="0"/>
			<xsd:element name="id" type="tns:objectId" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="cause" type="xsd:string"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="identified">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Soggetto"/>
			<xsd:enumeration value="PortaDelegata"/>
			<xsd:enumeration value="PortaApplicativa"/>
			<xsd:enumeration value="ServizioApplicativo"/>
		</xsd:restriction>
 	</xsd:simpleType>
	<xsd:complexType name="objectId">
		<xsd:choice>
			<xsd:element ref="tns:wrapperIdSoggetto" />
			<xsd:element ref="tns:wrapperIdPortaDelegata" />
			<xsd:element ref="tns:wrapperIdPortaApplicativa" />
			<xsd:element ref="tns:wrapperIdServizioApplicativo" />
		</xsd:choice>
	</xsd:complexType>
	<xsd:element name="wrapperIdSoggetto" type="tns:wrapperIdSoggetto"/>
	<xsd:complexType name="wrapperIdSoggetto">
		<xsd:sequence>
			<xsd:element name="id" type="api:id-soggetto" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="wrapperIdPortaDelegata" type="tns:wrapperIdPortaDelegata"/>
	<xsd:complexType name="wrapperIdPortaDelegata">
		<xsd:sequence>
			<xsd:element name="id" type="api:id-porta-delegata" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="wrapperIdPortaApplicativa" type="tns:wrapperIdPortaApplicativa"/>
	<xsd:complexType name="wrapperIdPortaApplicativa">
		<xsd:sequence>
			<xsd:element name="id" type="api:id-porta-applicativa" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="wrapperIdServizioApplicativo" type="tns:wrapperIdServizioApplicativo"/>
	<xsd:complexType name="wrapperIdServizioApplicativo">
		<xsd:sequence>
			<xsd:element name="id" type="api:id-servizio-applicativo" />
		</xsd:sequence>
	</xsd:complexType>


	<!-- EXCEPTION -->
	<xsd:element name="config-service-exception" type="tns:config-service-exception"/>
	<xsd:complexType name="config-service-exception">
		<xsd:sequence>
			<xsd:element name="methodName" type="xsd:string"/>
			<xsd:element name="objectId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorMessage" type="xsd:string"/>
			<xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorStackTrace" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="config-not-found-exception" type="tns:config-not-found-exception"/>
	<xsd:complexType name="config-not-found-exception">
		<xsd:sequence>
			<xsd:element name="methodName" type="xsd:string"/>
			<xsd:element name="objectId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorMessage" type="xsd:string"/>
			<xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorStackTrace" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="config-multiple-result-exception" type="tns:config-multiple-result-exception"/>
	<xsd:complexType name="config-multiple-result-exception">
		<xsd:sequence>
			<xsd:element name="methodName" type="xsd:string"/>
			<xsd:element name="objectId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorMessage" type="xsd:string"/>
			<xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorStackTrace" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="config-not-implemented-exception" type="tns:config-not-implemented-exception"/>
	<xsd:complexType name="config-not-implemented-exception">
		<xsd:sequence>
			<xsd:element name="methodName" type="xsd:string"/>
			<xsd:element name="objectId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorMessage" type="xsd:string"/>
			<xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorStackTrace" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="config-not-authorized-exception" type="tns:config-not-authorized-exception"/>
	<xsd:complexType name="config-not-authorized-exception">
		<xsd:sequence>
			<xsd:element name="methodName" type="xsd:string"/>
			<xsd:element name="objectId" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorMessage" type="xsd:string"/>
			<xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
			<xsd:element name="errorStackTrace" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>



	<!-- WRAPPED ELEMENT -->

	<xsd:element name="findAll" type="tns:findAll" />
	<xsd:complexType name="findAll">
		<xsd:sequence>
			<xsd:element name="filter" type="tns:search-filter-soggetto" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="findAllResponse" type="tns:findAllResponse" />
	<xsd:complexType name="findAllResponse">
		<xsd:sequence>
			<xsd:element name="soggetto" type="api:soggetto" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="find" type="tns:find" />
	<xsd:complexType name="find">
		<xsd:sequence>
			<xsd:element name="filter" type="tns:search-filter-soggetto" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="findResponse" type="tns:findResponse" />
	<xsd:complexType name="findResponse">
		<xsd:sequence>
			<xsd:element name="soggetto" type="api:soggetto" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="count" type="tns:count" />
	<xsd:complexType name="count">
		<xsd:sequence>
			<xsd:element name="filter" type="tns:search-filter-soggetto" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="countResponse" type="tns:countResponse" />
	<xsd:complexType name="countResponse">
		<xsd:sequence>
			<xsd:element name="count" type="xsd:long" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="get" type="tns:get" />
	<xsd:complexType name="get">
		<xsd:sequence>
			<xsd:element name="idSoggetto" type="api:id-soggetto" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="getResponse" type="tns:getResponse" />
	<xsd:complexType name="getResponse">
		<xsd:sequence>
			<xsd:element name="soggetto" type="api:soggetto" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="exists" type="tns:exists" />
	<xsd:complexType name="exists">
		<xsd:sequence>
			<xsd:element name="idSoggetto" type="api:id-soggetto" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="existsResponse" type="tns:existsResponse" />
	<xsd:complexType name="existsResponse">
		<xsd:sequence>
			<xsd:element name="exists" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="findAllIds" type="tns:findAllIds" />
	<xsd:complexType name="findAllIds">
		<xsd:sequence>
			<xsd:element name="filter" type="tns:search-filter-soggetto" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="findAllIdsResponse" type="tns:findAllIdsResponse" />
	<xsd:complexType name="findAllIdsResponse">
		<xsd:sequence>
			<xsd:element name="idSoggetto" type="api:id-soggetto" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="inUse" type="tns:inUse" />
	<xsd:complexType name="inUse">
		<xsd:sequence>
			<xsd:element name="idSoggetto" type="api:id-soggetto" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="inUseResponse" type="tns:inUseResponse" />
	<xsd:complexType name="inUseResponse">
		<xsd:sequence>
			<xsd:element name="inUse" type="tns:use-info" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>


</xsd:schema>