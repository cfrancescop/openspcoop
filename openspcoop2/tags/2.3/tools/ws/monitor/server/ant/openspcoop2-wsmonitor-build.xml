<project name="openspcoop2-compile-wsmonitor">
    <description>
        Produzione dei jar relativi al package org.openspcoop2.pdd.monitor.ws.server
    </description>

	<import file="${openspcoop2}/ant/commons/svn-build.xml" />
	<import file="${openspcoop2}/ant/commons/compile-build.xml" />
	<import file="${openspcoop2}/ant/commons/api-build.xml" />
	
	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
          <classpath>
              <pathelement location="${required_lib}/ant/ant-contrib-1.0b3.jar"/>
          </classpath>
	</taskdef>
	

	<!-- Compilazione della libreria 'org.openspcoop2.pdd.monitor.ws.server.*' -->
	<target name="compile_openspcoop2_monitor_ws" description="compila la libreria org.openspcoop2.pdd.monitor.ws.server.*">

		<if>
			<istrue value="${buildMonitorWS}"/>
			<then>
		
				<!-- Info svn -->
				<runtarget target="checksvn" />
				
				<!-- Definizione jar in base al tipo di war -->				
				<var name="COUNT_METHOD_EXCLUDE" value=""/>
				<if>
					<equals arg1="${war_type}" arg2="CRUD"/>
					<then>
						<var name="COUNT_METHOD_EXCLUDE" value="**/wrapped/Count*.class"/>
					</then>
				</if>
				<var name="EXISTS_METHOD_EXCLUDE" value=""/>
				<if>
					<equals arg1="${war_type}" arg2="CRUD"/>
					<then>
						<var name="EXISTS_METHOD_EXCLUDE" value="**/wrapped/Exists*.class"/>
					</then>
				</if>
				<var name="FIND_METHOD_EXCLUDE" value=""/>
				<if>
					<equals arg1="${war_type}" arg2="CRUD"/>
					<then>
						<var name="FIND_METHOD_EXCLUDE" value="**/wrapped/Find*.class"/>
					</then>
				</if>
				<var name="GET_METHOD_EXCLUDE" value=""/>
				<if>
					<equals arg1="${war_type}" arg2="CRUD"/>
					<then>
						<var name="GET_METHOD_EXCLUDE" value="**/wrapped/Get*.class"/>
					</then>
				</if>
				<var name="INUSE_METHOD_EXCLUDE" value=""/>
				<if>
					<equals arg1="${war_type}" arg2="CRUD"/>
					<then>
						<var name="INUSE_METHOD_EXCLUDE" value="**/wrapped/InUse*.class"/>
					</then>
				</if>
				<var name="CREATE_METHOD_EXCLUDE" value=""/>
				<if>
					<equals arg1="${war_type}" arg2="Search"/>
					<then>
						<var name="CREATE_METHOD_EXCLUDE" value="**/wrapped/Create*.class"/>
					</then>
				</if>
				<var name="UPDATE_METHOD_EXCLUDE" value=""/>
				<if>
					<equals arg1="${war_type}" arg2="Search"/>
					<then>
						<var name="UPDATE_METHOD_EXCLUDE" value="**/wrapped/Update*.class"/>
					</then>
				</if>
				<var name="DELETE_METHOD_EXCLUDE" value=""/>
				<if>
					<equals arg1="${war_type}" arg2="Search"/>
					<then>
						<var name="DELETE_METHOD_EXCLUDE" value="**/wrapped/Delete*.class"/>
					</then>
				</if>
				<var name="EXCLUDE_TYPE_1" value=""/>
				<var name="EXCLUDE_TYPE_2" value=""/>
				<var name="EXCLUDE_INTERFACE" value=""/>
				<if>
					<equals arg1="${war_type}" arg2="Search"/>
					<then>
						<var name="EXCLUDE_TYPE_1" value="CRUD"/>
						<var name="EXCLUDE_TYPE_2" value="All"/>
						<var name="EXCLUDE_INTERFACE" value="All"/> <!-- La Impl necessità  della CRUD, se per l'oggetto vi è¨ anche l'implementazione CRUD -->
					</then>
				</if>
				<if>
					<equals arg1="${war_type}" arg2="CRUD"/>
					<then>
						<var name="EXCLUDE_TYPE_1" value="Search"/>
						<var name="EXCLUDE_TYPE_2" value="All"/>
						<var name="EXCLUDE_INTERFACE" value="All"/> <!-- La Impl necessità  della Search, se per l'oggetto vi è anche l'implementazione Search -->
					</then>
				</if>
				<if>
					<equals arg1="${war_type}" arg2="All"/>
					<then>
						<var name="EXCLUDE_TYPE_1" value="Search"/>
						<var name="EXCLUDE_TYPE_2" value="CRUD"/>
						<var name="EXCLUDE_INTERFACE" value="CLASSE_INESISTENTE"/> <!-- La Impl necessità  della Search e/o della Crud, se per l'oggetto vi è anche l'implementazione Search e/o Crud -->
					</then>
				</if>

				<!-- org.openspcoop2.pdd.monitor.ws.server -->
				<var name="packagesCompiled" value="org.openspcoop2.pdd.monitor.ws.server" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.monitor.ws.server.beans" />	
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.monitor.ws.server.config" />	
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.monitor.ws.server.exception" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.monitor.ws.server.filter" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.monitor.ws.server.filter.beans" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.monitor.ws.server.impl" />
				<var name="packagesCompiled" value="${packagesCompiled},org.openspcoop2.pdd.monitor.ws.server.wrapped" />	
				<antcall target="compile_src_openspcoop2">
					<param name="compile_src_openspcoop2.SVNINFO" value="${svnant.jar.presente}"/>
					<param name="compile_src_openspcoop2.SRC_DIR" value="${src_monitor_ws}"/>
					<param name="compile_src_openspcoop2.SVN_ID_NAME" value="ws-monitor-server"/>
					<param name="compile_src_openspcoop2.BUILD_INCLUDES" value="**/*.java"/>
					<param name="compile_src_openspcoop2.SRC_PREFIX" value=""/>
					<param name="compile_src_openspcoop2.PACKAGE" value="org.openspcoop2.pdd.monitor.ws.server"/>
					<param name="compile_src_openspcoop2.DIST_DIR_NAME" value="."/>
					<param name="dist" value="${dist_monitor_ws}"/>
					<param name="build" value="${build_monitor_ws}"/>
				</antcall>
				
				<!-- unzip jar prodotto -->
				<delete dir="${build_monitor_ws}/classes" />
				<mkdir dir="${build_monitor_ws}/classes" />
				<unzip dest="${build_monitor_ws}/classes">
					<fileset dir="${dist_monitor_ws}">
						<include name="openspcoop2_ws-monitor-server*.jar"/>
					</fileset>
				</unzip>
				<delete dir="${dist_monitor_ws}" >
					<include name="openspcoop2_ws-monitor-server*.jar"/>
				</delete>
				
				<!-- Jar Complessivo -->
				<antcall target="build_jar_schema">
					<param name="compile_src_openspcoop2.SVNINFO" value="${svnant.jar.presente}"/>
					<param name="compile_src_openspcoop2.JAR_SRC_DIR" value="${build_monitor_ws}/classes"/>
					<param name="compile_src_openspcoop2.SVN_ID_NAME" value="ws-monitor-server"/>
					<param name="compile_src_openspcoop2.JAR_SRC_INCLUDES" value="**"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES" value="wsdl/*.wsdl"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES_2" value="wsdl/*.xsd"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES_3" value="**/impl/*${EXCLUDE_TYPE_1}Impl_PortSoap11.class"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES_4" value="**/impl/*${EXCLUDE_TYPE_1}Impl_PortSoap12.class"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES_5" value="**/impl/*${EXCLUDE_TYPE_2}Impl_PortSoap11.class"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES_6" value="**/impl/*${EXCLUDE_TYPE_2}Impl_PortSoap12.class"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES_7" value="**/*${EXCLUDE_INTERFACE}.class"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES_8" value="${COUNT_METHOD_EXCLUDE}"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES_9" value="${EXISTS_METHOD_EXCLUDE}"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES_10" value="${FIND_METHOD_EXCLUDE}"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES_11" value="${GET_METHOD_EXCLUDE}"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES_12" value="${INUSE_METHOD_EXCLUDE}"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES_13" value="${CREATE_METHOD_EXCLUDE}"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES_14" value="${UPDATE_METHOD_EXCLUDE}"/>
					<param name="compile_src_openspcoop2.JAR_SRC_EXCLUDES_15" value="${DELETE_METHOD_EXCLUDE}"/>
					<param name="compile_src_openspcoop2.JAR_SRC_PREFIX" value=""/>
					<param name="compile_src_openspcoop2.DIST_DIR_NAME" value="."/>
					<param name="dist" value="${dist_monitor_ws}"/>
					<param name="build" value="${build_monitor_ws}"/>
				</antcall>
				
				<!-- API -->
				<if>
					<istrue value="${buildAPI}"/>
					<then>
						<mkdir dir="${doc_monitor_ws}"/>
					</then>
				</if>
				<antcall target="compile_api_openspcoop2">
					<param name="compile_src_openspcoop2.PACKAGES" value="${packagesCompiled}"/>
					<param name="compile_src_openspcoop2.API_NAME" value="ws-monitor-server"/>
					<param name="compile_src_openspcoop2.API_DIR" value="${doc_monitor_ws}/api"/>
					<param name="compile_src_openspcoop2.SVNINFO" value="${svnant.jar.presente}"/>
					<param name="src" value="${src_monitor_ws}"/>
					<param name="doc" value="${doc_monitor_ws}"/>
					<param name="dist" value="${dist_monitor_ws}"/>
				</antcall>
				
			</then>
		</if>
		
	</target>
	
</project>
