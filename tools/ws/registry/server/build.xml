<?xml version="1.0" encoding="iso-8859-1"?>

<project name="registry.dao.ws.server" basedir=".">

	<description>
        	Ambiente di compilazione del Progetto registry
	</description>

	<import file="./local_env.xml" />
	<import file="./ant/openspcoop2-wsregistry-build.xml" />
	<import file="./ant/openspcoop2-wsregistry-war.xml" />
	<import file="${openspcoop2}/ant/commons/as-check.xml" />
	
	<!-- directory root -->
	<property name="svn_rootDir" location="${openspcoop2}" />

	<!-- estensione di ant (if .... ) -->
	<!--
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${required_lib_registry}/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>
	-->
	
	<!-- Check AS Version -->
	<if>
		<not>
			<istrue value="${_asVersionVerified}"/>
		</not>
		<then>
			<runtarget target="check_as_version" />
			<var name="_asVersionVerified" value="true"/>
		</then>
	</if>
	
	<!-- Jar dipendenti dall'A.S. -->
	<var name="commons_logging_jar" value="" />
	<var name="jaxp_ri_jar" value=""/>
	<var name="jboss_classloading" value="" />
	<var name="jboss_scanning" value="" />
	<var name="jboss_deployment_structure" value="" />
  
	<!-- commons_logging -->
	<if>
		<or>
			<equals arg1="${as}" arg2="jboss7"/>
			<matches string="${as}" pattern="wildfly.*"/>
			<matches string="${as}" pattern="tomcat.*"/>
		</or>
		<then>
			<var name="commons_logging_jar" value="commons-logging-1.2.jar" />
		</then>
	</if>        
	<!-- jaxp_ri -->
	<if>
		<or>
			<equals arg1="${as}" arg2="jboss7"/>
			<matches string="${as}" pattern="wildfly.*"/>
		</or>
		<then>
			<var name="jaxp_ri_jar" value="jaxp-ri-1.4.5.jar"/>
		</then>
	</if>
	<!-- jboss_classloading -->
	<if>
		<or>
			<equals arg1="${as}" arg2="jboss6"/>
			<equals arg1="${as}" arg2="jboss7"/>
			<matches string="${as}" pattern="wildfly.*"/>
		</or>
		<then>
			<var name="jboss_classloading" value="jboss-classloading.xml" />
		</then>
	</if>
	<!-- jboss_scanning -->
	<if>
		<or>
			<equals arg1="${as}" arg2="jboss6"/>
			<equals arg1="${as}" arg2="jboss7"/>
			<matches string="${as}" pattern="wildfly.*"/>
		</or>
		<then>
			<var name="jboss_scanning" value="jboss-scanning.xml" />
		</then>
	</if>
	<!-- jboss_deployment_structure -->
	<if>
		<or>
			<equals arg1="${as}" arg2="jboss7"/>
			<matches string="${as}" pattern="wildfly.*"/>
		</or>
		<then>
			<var name="jboss_deployment_structure" value="jboss-deployment-structure.xml" />
		</then>
	</if>  
	
	
	<!-- CLASSPATH -->
	<path id="classpath_compile" >
		<fileset dir="${openspcoop2.lib}" >
			<exclude name="**/axis14/*"/>
			<exclude name="**/*README"/>
			<exclude name="openspcoop2.userlibraries"/>
		</fileset>
	</path>
	<path id="classpath_dist" >
		<fileset dir="${openspcoop2.dist}" >
			<include name="*.jar"/>
		</fileset>
	</path>	
	
	
	<!-- Properties -->
	<property name="src_dir_registry_ws" location="src" />
	<property name="src_registry_ws" location="${src_dir_registry_ws}" />
	<property name="build_dir_registry_ws" location="build" />
	<property name="build_registry_ws" location="${build_dir_registry_ws}" />
	<property name="dist_registry_ws" location="dist" />
	<property name="doc_registry_ws" location="doc" />
	<property name="properties_registry_ws" location="deploy/properties" />
	<property name="wsdl_registry_ws" location="deploy/wsdl" />
	<property name="tmp_jboss_conf" location="tmp" />
	
	<target name="clean_ws_exclude_war">
		<delete dir="${build_dir_registry_ws}" />
		<delete dir="${dist_registry_ws}">
			<exclude name="*.war"/>
		</delete>
		<delete dir="${tmp_jboss_conf}" />
	</target>
	<target name="clean_ws">
		<delete dir="${build_dir_registry_ws}" />
		<delete dir="${dist_registry_ws}" />
		<delete dir="${tmp_jboss_conf}" />
	</target>
	<target name="clean" depends="clean_ws"/>


	<target name="init_compile_registry_ws">
		<mkdir dir="${build_registry_ws}" />
		<mkdir dir="${dist_registry_ws}" />
	</target>

	<target name="build_registry_ws" depends="init_compile_registry_ws" description="compila la libreria">
		
		<antcall target="compile_openspcoop2_registry_ws">
			<param name="war_type" value="${war_type}"/>
		</antcall>
		
	</target>

	<target name="build_ws" depends="build_registry_ws"/>

	


	<target name="war_search" depends="clean_ws_exclude_war">
		<antcall target="preprocess_search">
			<param name="war_type" value="Search"/>
		</antcall>
		<antcall target="build_registry_ws">
			<param name="war_type" value="Search"/>
		</antcall>
		<antcall target="-war">
			<param name="war_type" value="Search"/>
		</antcall>
	</target>
	<target name="war_crud" depends="clean_ws_exclude_war">
		<antcall target="preprocess_crud">
			<param name="war_type" value="CRUD"/>
		</antcall>
		<antcall target="build_registry_ws">
			<param name="war_type" value="CRUD"/>
		</antcall>
		<antcall target="-war">
			<param name="war_type" value="CRUD"/>
		</antcall>
	</target>
	<target name="war_all" depends="clean_ws_exclude_war">
		<antcall target="preprocess_all">
			<param name="war_type" value="All"/>
		</antcall>
		<antcall target="build_registry_ws">
			<param name="war_type" value="All"/>
		</antcall>
		<antcall target="-war">
			<param name="war_type" value="All"/>
		</antcall>
	</target>
	<target name="war">
		<antcall target="war_search"/>
		<antcall target="war_crud"/>
		<antcall target="war_all"/>
		<antcall target="clean_ws_exclude_war"/>
	</target>

	


</project>
